Prefix(:=<http://www.grsu.by/net/OdTMBaseThreatModel#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.grsu.by/net/OdTMBaseThreatModel>

Declaration(Class(:ApplicationProtocol))
Declaration(Class(:AuthenticationThreat))
Declaration(Class(:AuthorizationThreat))
Declaration(Class(:AvailabilityThreat))
Declaration(Class(:Boundary))
Declaration(Class(:Classified))
Declaration(Class(:Component))
Declaration(Class(:ConfidentialityThreat))
Declaration(Class(:ContainsClientComponent))
Declaration(Class(:ContainsDNSClientComponent))
Declaration(Class(:ContainsDNSServerComponent))
Declaration(Class(:ContainsHTTPClientComponent))
Declaration(Class(:ContainsHTTPServerComponent))
Declaration(Class(:ContainsServerComponent))
Declaration(Class(:ContextSecurityPattern))
Declaration(Class(:Countermeasure))
Declaration(Class(:DNSClientComponent))
Declaration(Class(:DNSProtocol))
Declaration(Class(:DNSServerComponent))
Declaration(Class(:DataFlow))
Declaration(Class(:DataLinkProtocol))
Declaration(Class(:DataStore))
Declaration(Class(:Denial_of_ServiceThreat))
Declaration(Class(:Elevation_of_PrivilegeThreat))
Declaration(Class(:ExternalInteractor))
Declaration(Class(:HTTPClientComponent))
Declaration(Class(:HTTPProtocol))
Declaration(Class(:HTTPServerComponent))
Declaration(Class(:HardwareComponent))
Declaration(Class(:ImplementsApplicationProtocol))
Declaration(Class(:ImplementsDNSProtocol))
Declaration(Class(:ImplementsHTTPProtocol))
Declaration(Class(:Information_DisclosureThreat))
Declaration(Class(:IntegrityThreat))
Declaration(Class(:NetworkFlow))
Declaration(Class(:NetworkProtocol))
Declaration(Class(:NonRepudiationThreat))
Declaration(Class(:PhysicalProtocol))
Declaration(Class(:Process))
Declaration(Class(:Protocol))
Declaration(Class(:RepudiationThreat))
Declaration(Class(:STRIDE))
Declaration(Class(:SchemaInstance))
Declaration(Class(:SecurityMetrics))
Declaration(Class(:SecurityObjective))
Declaration(Class(:SingleFlow))
Declaration(Class(:SoftwareComponent))
Declaration(Class(:SpoofingThreat))
Declaration(Class(:Stencil))
Declaration(Class(:Stub))
Declaration(Class(:TamperingThreat))
Declaration(Class(:Target))
Declaration(Class(:Threat))
Declaration(Class(:TransportProtocol))
Declaration(Class(:TrustBorderBoundary))
Declaration(Class(:TrustLineBoundary))
Declaration(ObjectProperty(:affects))
Declaration(ObjectProperty(:agrees))
Declaration(ObjectProperty(:contains))
Declaration(ObjectProperty(:crosses))
Declaration(ObjectProperty(:divides))
Declaration(ObjectProperty(:hasEdge))
Declaration(ObjectProperty(:hasSource))
Declaration(ObjectProperty(:hasTarget))
Declaration(ObjectProperty(:implements))
Declaration(ObjectProperty(:includes))
Declaration(ObjectProperty(:isAffectedBy))
Declaration(ObjectProperty(:isEdgeOf))
Declaration(ObjectProperty(:isIncluded))
Declaration(ObjectProperty(:isMitigatedBy))
Declaration(ObjectProperty(:isProtectedBy))
Declaration(ObjectProperty(:isSourceOf))
Declaration(ObjectProperty(:isTargetOf))
Declaration(ObjectProperty(:labelsSO))
Declaration(ObjectProperty(:labelsSTRIDE))
Declaration(ObjectProperty(:mitigates))
Declaration(ObjectProperty(:protects))
Declaration(ObjectProperty(:suggests))
Declaration(NamedIndividual(:SO_Authentication))
Declaration(NamedIndividual(:SO_Authorization))
Declaration(NamedIndividual(:SO_Availability))
Declaration(NamedIndividual(:SO_Confidentiality))
Declaration(NamedIndividual(:SO_Integrity))
Declaration(NamedIndividual(:SO_NonRepudiation))
Declaration(NamedIndividual(:STRIDE_Denial_of_Service))
Declaration(NamedIndividual(:STRIDE_Elevation_of_Privilege))
Declaration(NamedIndividual(:STRIDE_Information_Disclosure))
Declaration(NamedIndividual(:STRIDE_Repudiation))
Declaration(NamedIndividual(:STRIDE_Spoofing))
Declaration(NamedIndividual(:STRIDE_Tampering))
Declaration(NamedIndividual(:protocol_DNS))
Declaration(NamedIndividual(:protocol_HTTP))

############################
#   Object Properties
############################

# Object Property: :affects (:affects)

AnnotationAssertion(rdfs:comment :affects "i.e. Threat affects Target or DataFlow"@en)
InverseObjectProperties(:affects :isAffectedBy)

# Object Property: :agrees (:agrees)

AnnotationAssertion(rdfs:comment :agrees "i.e.  NetworkFlow agrees Protocol"@en)

# Object Property: :contains (:contains)

AnnotationAssertion(rdfs:comment :contains "i.e. Target contains Component"@en)

# Object Property: :crosses (crosses)

AnnotationAssertion(rdfs:comment :crosses "i.e. DataFlow crosses Boundary"@en)
AnnotationAssertion(rdfs:label :crosses "crosses"@en)
InverseObjectProperties(:crosses :divides)

# Object Property: :divides (divides)

AnnotationAssertion(rdfs:comment :divides "i.e. Boundary divides DataFlow"@en)
AnnotationAssertion(rdfs:label :divides "divides"@en)

# Object Property: :hasEdge (:hasEdge)

AnnotationAssertion(rdfs:comment :hasEdge "i.e. DataFlow hasEdge (hasSource or hasTarget) Target"@en)

# Object Property: :hasSource (:hasSource)

AnnotationAssertion(rdfs:comment :hasSource "i.e. DataFlow hasSource Target"@en)
SubObjectPropertyOf(:hasSource :hasEdge)
InverseObjectProperties(:hasSource :isSourceOf)

# Object Property: :hasTarget (:hasTarget)

AnnotationAssertion(rdfs:comment :hasTarget "i.e. DataFlow hasTarget Target"@en)
SubObjectPropertyOf(:hasTarget :hasEdge)
InverseObjectProperties(:hasTarget :isTargetOf)

# Object Property: :implements (:implements)

AnnotationAssertion(rdfs:comment :implements "(i.e. Target implements Protocol)"@en)

# Object Property: :includes (:includes)

AnnotationAssertion(rdfs:comment :includes "i.e. TrustLineBoundary includesTarget"@en)
InverseObjectProperties(:includes :isIncluded)

# Object Property: :isAffectedBy (:isAffectedBy)

AnnotationAssertion(rdfs:comment :isAffectedBy "i.e. Target or DataFlow isAffectedBy Threat"@en)

# Object Property: :isEdgeOf (:isEdgeOf)

AnnotationAssertion(rdfs:comment :isEdgeOf "i.e. Target isEdgeOf (isSourceOf or isTargerOf) DataFlow"@en)

# Object Property: :isIncluded (:isIncluded)

AnnotationAssertion(rdfs:comment :isIncluded "i.e. Target isIncluded in TrustLineBoundary"@en)

# Object Property: :isMitigatedBy (:isMitigatedBy)

AnnotationAssertion(rdfs:comment :isMitigatedBy "i.e. Threat isMitigatedBy Countermeasure"@en)
InverseObjectProperties(:isMitigatedBy :mitigates)

# Object Property: :isProtectedBy (:isProtectedBy)

AnnotationAssertion(rdfs:comment :isProtectedBy "i.e. Target or DataFlow isProtectedBy Counterneasure"@en)
InverseObjectProperties(:isProtectedBy :protects)

# Object Property: :isSourceOf (:isSourceOf)

AnnotationAssertion(rdfs:comment :isSourceOf "i.e. Target isSourceOf DataFlow"@en)
SubObjectPropertyOf(:isSourceOf :isEdgeOf)

# Object Property: :isTargetOf (:isTargetOf)

AnnotationAssertion(rdfs:comment :isTargetOf "i.e. Target isSourceOf DataFlow"@en)
SubObjectPropertyOf(:isTargetOf :isEdgeOf)

# Object Property: :labelsSO (:labelsSO)

AnnotationAssertion(rdfs:comment :labelsSO "i.e. Threat or Countermeasure labelsSO SecurityObjective"@en)

# Object Property: :labelsSTRIDE (:labelsSTRIDE)

AnnotationAssertion(rdfs:comment :labelsSTRIDE "i.e. Threat or Countermeasure labelsSTRIDE STRIDE"@en)

# Object Property: :mitigates (:mitigates)

AnnotationAssertion(rdfs:comment :mitigates "i.e. Countermeasure mitigates Threat"@en)

# Object Property: :protects (:protects)

AnnotationAssertion(rdfs:comment :protects "i.e. Countermeasure protects Target or DataFlow"@en)

# Object Property: :suggests (:suggests)

AnnotationAssertion(rdfs:comment :suggests "Target might contain internal component"@en)



############################
#   Classes
############################

# Class: :ApplicationProtocol (:ApplicationProtocol)

SubClassOf(:ApplicationProtocol :Protocol)

# Class: :AuthenticationThreat (:AuthenticationThreat)

EquivalentClasses(:AuthenticationThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_Authentication)))
SubClassOf(:AuthenticationThreat :Threat)
SubClassOf(:AuthenticationThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Spoofing))

# Class: :AuthorizationThreat (:AuthorizationThreat)

EquivalentClasses(:AuthorizationThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_Authorization)))
SubClassOf(:AuthorizationThreat :Threat)
SubClassOf(:AuthorizationThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Elevation_of_Privilege))

# Class: :AvailabilityThreat (:AvailabilityThreat)

EquivalentClasses(:AvailabilityThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_Availability)))
SubClassOf(:AvailabilityThreat :Threat)
SubClassOf(:AvailabilityThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Denial_of_Service))

# Class: :Boundary (:Boundary)

SubClassOf(:Boundary :Stencil)

# Class: :ConfidentialityThreat (:ConfidentialityThreat)

EquivalentClasses(:ConfidentialityThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_Confidentiality)))
SubClassOf(:ConfidentialityThreat :Threat)
SubClassOf(:ConfidentialityThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Information_Disclosure))

# Class: :ContainsClientComponent (:ContainsClientComponent)

EquivalentClasses(:ContainsClientComponent ObjectSomeValuesFrom(:isSourceOf :NetworkFlow))
SubClassOf(:ContainsClientComponent :Classified)

# Class: :ContainsDNSClientComponent (:ContainsDNSClientComponent)

EquivalentClasses(:ContainsDNSClientComponent ObjectSomeValuesFrom(:isSourceOf ObjectSomeValuesFrom(:agrees :DNSProtocol)))
SubClassOf(:ContainsDNSClientComponent :Classified)
SubClassOf(:ContainsDNSClientComponent ObjectSomeValuesFrom(:suggests :DNSClientComponent))

# Class: :ContainsDNSServerComponent (:ContainsDNSServerComponent)

EquivalentClasses(:ContainsDNSServerComponent ObjectSomeValuesFrom(:isTargetOf ObjectSomeValuesFrom(:agrees :DNSProtocol)))
SubClassOf(:ContainsDNSServerComponent :Classified)
SubClassOf(:ContainsDNSServerComponent ObjectSomeValuesFrom(:suggests :DNSServerComponent))

# Class: :ContainsHTTPClientComponent (:ContainsHTTPClientComponent)

EquivalentClasses(:ContainsHTTPClientComponent ObjectSomeValuesFrom(:isSourceOf ObjectSomeValuesFrom(:agrees :HTTPProtocol)))
SubClassOf(:ContainsHTTPClientComponent :Classified)
SubClassOf(:ContainsHTTPClientComponent ObjectSomeValuesFrom(:suggests :HTTPClientComponent))

# Class: :ContainsHTTPServerComponent (:ContainsHTTPServerComponent)

EquivalentClasses(:ContainsHTTPServerComponent ObjectSomeValuesFrom(:isTargetOf ObjectSomeValuesFrom(:agrees :HTTPProtocol)))
SubClassOf(:ContainsHTTPServerComponent :Classified)
SubClassOf(:ContainsHTTPServerComponent ObjectSomeValuesFrom(:suggests :HTTPServerComponent))

# Class: :ContainsServerComponent (:ContainsServerComponent)

EquivalentClasses(:ContainsServerComponent ObjectSomeValuesFrom(:isTargetOf :NetworkFlow))
SubClassOf(:ContainsServerComponent :Classified)

# Class: :ContextSecurityPattern (:ContextSecurityPattern)

SubClassOf(:ContextSecurityPattern :Countermeasure)

# Class: :DNSClientComponent (:DNSClientComponent)

SubClassOf(:DNSClientComponent :SoftwareComponent)

# Class: :DNSProtocol (:DNSProtocol)

SubClassOf(:DNSProtocol :ApplicationProtocol)

# Class: :DNSServerComponent (:DNSServerComponent)

SubClassOf(:DNSServerComponent :SoftwareComponent)

# Class: :DataFlow (:DataFlow)

SubClassOf(:DataFlow :Stencil)

# Class: :DataLinkProtocol (:DataLinkProtocol)

SubClassOf(:DataLinkProtocol :Protocol)

# Class: :DataStore (:DataStore)

SubClassOf(:DataStore :Target)

# Class: :Denial_of_ServiceThreat (:Denial_of_ServiceThreat)

EquivalentClasses(:Denial_of_ServiceThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Denial_of_Service)))
SubClassOf(:Denial_of_ServiceThreat ObjectHasValue(:labelsSO :SO_Availability))

# Class: :Elevation_of_PrivilegeThreat (:Elevation_of_PrivilegeThreat)

EquivalentClasses(:Elevation_of_PrivilegeThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Elevation_of_Privilege)))
SubClassOf(:Elevation_of_PrivilegeThreat ObjectHasValue(:labelsSO :SO_Authorization))

# Class: :ExternalInteractor (:ExternalInteractor)

SubClassOf(:ExternalInteractor :Target)

# Class: :HTTPClientComponent (:HTTPClientComponent)

SubClassOf(:HTTPClientComponent :SoftwareComponent)

# Class: :HTTPProtocol (:HTTPProtocol)

SubClassOf(:HTTPProtocol :ApplicationProtocol)

# Class: :HTTPServerComponent (:HTTPServerComponent)

SubClassOf(:HTTPServerComponent :SoftwareComponent)

# Class: :HardwareComponent (:HardwareComponent)

SubClassOf(:HardwareComponent :Component)

# Class: :ImplementsApplicationProtocol (:ImplementsApplicationProtocol)

EquivalentClasses(:ImplementsApplicationProtocol ObjectSomeValuesFrom(:implements :ApplicationProtocol))
SubClassOf(:ImplementsApplicationProtocol :Classified)

# Class: :ImplementsDNSProtocol (:ImplementsDNSProtocol)

EquivalentClasses(:ImplementsDNSProtocol ObjectSomeValuesFrom(:implements :DNSProtocol))
SubClassOf(:ImplementsDNSProtocol :Classified)

# Class: :ImplementsHTTPProtocol (:ImplementsHTTPProtocol)

EquivalentClasses(:ImplementsHTTPProtocol ObjectSomeValuesFrom(:implements :HTTPProtocol))
SubClassOf(:ImplementsHTTPProtocol :Classified)

# Class: :Information_DisclosureThreat (:Information_DisclosureThreat)

EquivalentClasses(:Information_DisclosureThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Information_Disclosure)))
SubClassOf(:Information_DisclosureThreat ObjectHasValue(:labelsSO :SO_Confidentiality))

# Class: :IntegrityThreat (:IntegrityThreat)

EquivalentClasses(:IntegrityThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_Integrity)))
SubClassOf(:IntegrityThreat :Threat)
SubClassOf(:IntegrityThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Tampering))

# Class: :NetworkFlow (:NetworkFlow)

SubClassOf(:NetworkFlow :DataFlow)

# Class: :NetworkProtocol (:NetworkProtocol)

SubClassOf(:NetworkProtocol :Protocol)

# Class: :NonRepudiationThreat (:NonRepudiationThreat)

EquivalentClasses(:NonRepudiationThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSO :SO_NonRepudiation)))
SubClassOf(:NonRepudiationThreat :Threat)
SubClassOf(:NonRepudiationThreat ObjectHasValue(:labelsSTRIDE :STRIDE_Repudiation))

# Class: :PhysicalProtocol (:PhysicalProtocol)

SubClassOf(:PhysicalProtocol :Protocol)

# Class: :Process (:Process)

SubClassOf(:Process :Target)

# Class: :RepudiationThreat (:RepudiationThreat)

EquivalentClasses(:RepudiationThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Repudiation)))
SubClassOf(:RepudiationThreat ObjectHasValue(:labelsSO :SO_NonRepudiation))

# Class: :STRIDE (:STRIDE)

EquivalentClasses(:STRIDE ObjectOneOf(:STRIDE_Denial_of_Service :STRIDE_Elevation_of_Privilege :STRIDE_Information_Disclosure :STRIDE_Repudiation :STRIDE_Spoofing :STRIDE_Tampering))
SubClassOf(:STRIDE :SecurityMetrics)

# Class: :SecurityObjective (:SecurityObjective)

EquivalentClasses(:SecurityObjective ObjectOneOf(:SO_Authentication :SO_Authorization :SO_Availability :SO_Confidentiality :SO_Integrity :SO_NonRepudiation))
SubClassOf(:SecurityObjective :SecurityMetrics)

# Class: :SingleFlow (:SingleFlow)

SubClassOf(:SingleFlow :DataFlow)

# Class: :SoftwareComponent (:SoftwareComponent)

SubClassOf(:SoftwareComponent :Component)

# Class: :SpoofingThreat (:SpoofingThreat)

EquivalentClasses(:SpoofingThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Spoofing)))
SubClassOf(:SpoofingThreat ObjectHasValue(:labelsSO :SO_Authentication))

# Class: :Stub (:Stub)

SubClassOf(:Stub :SchemaInstance)

# Class: :TamperingThreat (:TamperingThreat)

EquivalentClasses(:TamperingThreat ObjectIntersectionOf(:Threat ObjectHasValue(:labelsSTRIDE :STRIDE_Tampering)))
SubClassOf(:TamperingThreat ObjectHasValue(:labelsSO :SO_Integrity))

# Class: :Target (:Target)

SubClassOf(:Target :Stencil)

# Class: :TransportProtocol (:TransportProtocol)

SubClassOf(:TransportProtocol :Protocol)

# Class: :TrustBorderBoundary (:TrustBorderBoundary)

SubClassOf(:TrustBorderBoundary :Boundary)

# Class: :TrustLineBoundary (:TrustLineBoundary)

SubClassOf(:TrustLineBoundary :Boundary)


############################
#   Named Individuals
############################

# Individual: :SO_Authentication (:SO_Authentication)

ClassAssertion(:SchemaInstance :SO_Authentication)

# Individual: :SO_Authorization (:SO_Authorization)

ClassAssertion(:SchemaInstance :SO_Authorization)

# Individual: :SO_Availability (:SO_Availability)

ClassAssertion(:SchemaInstance :SO_Availability)

# Individual: :SO_Confidentiality (:SO_Confidentiality)

ClassAssertion(:SchemaInstance :SO_Confidentiality)

# Individual: :SO_Integrity (:SO_Integrity)

ClassAssertion(:SchemaInstance :SO_Integrity)

# Individual: :SO_NonRepudiation (:SO_NonRepudiation)

ClassAssertion(:SchemaInstance :SO_NonRepudiation)

# Individual: :STRIDE_Denial_of_Service (:STRIDE_Denial_of_Service)

ClassAssertion(:SchemaInstance :STRIDE_Denial_of_Service)

# Individual: :STRIDE_Elevation_of_Privilege (:STRIDE_Elevation_of_Privilege)

ClassAssertion(:SchemaInstance :STRIDE_Elevation_of_Privilege)

# Individual: :STRIDE_Information_Disclosure (:STRIDE_Information_Disclosure)

ClassAssertion(:SchemaInstance :STRIDE_Information_Disclosure)

# Individual: :STRIDE_Repudiation (:STRIDE_Repudiation)

ClassAssertion(:SchemaInstance :STRIDE_Repudiation)

# Individual: :STRIDE_Spoofing (:STRIDE_Spoofing)

ClassAssertion(:SchemaInstance :STRIDE_Spoofing)

# Individual: :STRIDE_Tampering (:STRIDE_Tampering)

ClassAssertion(:SchemaInstance :STRIDE_Tampering)

# Individual: :protocol_DNS (:protocol_DNS)

ClassAssertion(:DNSProtocol :protocol_DNS)
ClassAssertion(:SchemaInstance :protocol_DNS)

# Individual: :protocol_HTTP (:protocol_HTTP)

ClassAssertion(:HTTPProtocol :protocol_HTTP)
ClassAssertion(:SchemaInstance :protocol_HTTP)


SubObjectPropertyOf(ObjectPropertyChain(:isEdgeOf :agrees) :implements)
)